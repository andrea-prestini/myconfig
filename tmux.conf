set -g mouse on
# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# toggle mouse
# bind m run "cut -c3- ~/.tmux.conf | sh -s _toggle_mouse"

set-option -g repeat-time 600
#set-window-option -g mode-keys vi

set -g history-limit 5000                 # boost history

# CLEAR ALL--------------------------------------------------------------------------
# clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.1' \; clear-history

# -----DISPLAY-----------------------------------------------------------------------
# RGB 24-bit colour support (tmux >= 2.2), possible values are:
#  - true
#  - false (default)
tmux_conf_24b_colour=false


# PANES-------------------------------------------------------------------------------
setw -g pane-base-index 1     # make pane numbering consistent with windows
# new pane retain current path, possibile value are:
# - true (default)
# - false
tmux_conf_new_pane_retain_current_path=true

# split panes using v and h
# bind-key v split-window -h
# bind-key h  split-window -v
# unbind '"'
# unbind %
 bind-key - split-window -h
 bind-key _  split-window -v

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# maximize current pane
# bind z

# pane resizing
bind -r Left resize-pane -L 2
bind -r Down resize-pane -D 2
bind -r Up resize-pane -U 2
bind -r Right resize-pane -R 2

# WINDOWS-------------------------------------------------------------------------------
set -g base-index 1           # start windows numbering at 1
#setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

# window navigation
unbind n
unbind p
bind -r C-h previous-window # select previous window
bind -r C-l next-window     # select next window
bind Tab last-window        # move to last active window

bind -n S-Left previous-window 
bind -n S-Right next-window
bind-key -n C-Left swap-window -d -t -1
bind-key -n C-Right swap-window -d -t +1

# new windows retains current path, possible values are:
# - true
# -false (default)
tmux_conf_new_window_retain_current_path=false

# RELOAD CONFIG-------------------------------------------------------------------------
bind-key R source-file ~/.tmux.conf \; display-message " Config successfully reloaded"


# SESSION ------------------------------------------------------------------------------
# prompt for session name when creating a new session, possible values are:
# - true
# - false (default)
tmux_conf_new_session_prompt=false

# create session
bind C-c new-session

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

set-option -g status-position bottom
set-option -g status-justify centre

set -g status-bg colour241
set -g status-fg colour234

set-option -g status-right-length 65
set-option -g status-left-length 20
set-option -g status-right '#[fg=colour234, bold]#(echo Device: ) #(uname)  #(date)'
set-option -g status-left '#[fg=colour234, bold]#(echo "Session: ")#[fg=colour234, bold]#{session_name} '



# inactive window.
set-window-option -g window-status-format '#[fg=colour230]#I#[fg=colour230]#(echo :) #[default, bold]#W'
# current window.
set-window-option -g window-status-current-format '#[fg=colour230, bold]#I#[fg=colour230]#(echo :)#[fg=colour230]#W#[fg=dim]#F' 

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin "arcticicestudio/nord-tmux"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
set -g @plugin 'tmux-plugins/tmux-resurrect'

# -- urlview -------------------------------------------------------------------

# bind U run "cut -c3- ~/.tmux.conf | sh -s _urlview #{pane_id}"

# -- copy mode -----------------------------------------------------------------

bind Enter copy-mode # enter copy mode

run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi H send -X start-of-line 2> /dev/null || true'
run -b 'tmux bind -t vi-copy L end-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'



# -- buffers -------------------------------------------------------------------

bind b list-buffers  # list paste buffers
bind p paste-buffer  # paste from the top paste buffer
bind P choose-buffer # choose which buffer to paste from

run '.tmux/plugins/tpm/tpm'
